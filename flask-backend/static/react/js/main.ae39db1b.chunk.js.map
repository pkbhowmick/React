{"version":3,"sources":["components/SignUpForm.js","components/Repository.js","components/SignInForm.js","components/Info.js","components/Parsed_info.js","App.js","serviceWorker.js","index.js"],"names":["SignUpForm","state","name","email","password","confirm","handleChange","bind","handleSubmit","e","target","value","this","setState","preventDefault","data","alert","console","log","axios","post","then","response","localStorage","setItem","JSON","stringify","token","error","catch","err","className","onSubmit","htmlFor","type","id","placeholder","onChange","to","Component","SignInForm","exact","Info","fileInput","React","createRef","imgNidFront","current","files","FormData","append","headers","accept","multiple","ref","onClick","ParsedInfoForm","props","fName","mName","sName","gender","relation","nominee","pNo","prof","presentAddr","permAddr","userData","parse","getItem","fathers_name","mothers_name","nextProps","nextState","App","path","activeClassName","Boolean","window","location","hostname","match","element","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.ae39db1b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport { signup } from './Repository'\n\nclass SignUpForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(e) {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        const { password, confirm } = this.state;\n        if (password !== confirm) {\n            alert(\"Passwords don't match\");\n        } else {\n            console.log(\"The form was submitted with the following data: \");\n            console.log(this.state);\n            signup(this.state)\n            .catch(err => alert(err));\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"FormField\" onSubmit={this.handleSubmit}>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"name\" placeholder=\"Enter your Full Name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n                    <input className=\"FormField__Input\" type=\"email\" id=\"email\" placeholder=\"Enter your email address\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                    <input className=\"FormField__Input\" type=\"password\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"confirm\">Confirm Password</label>\n                    <input className=\"FormField__Input\" type=\"password\" id=\"confirm\" placeholder=\"Confirm your password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <button to=\"/upload-info\" className=\"FormField__Button mr-20\" type=\"submit\" >Sign Up</button>\n                    <Link to=\"/sign-in\" className=\"FormField__Link\">Already have an account?</Link>\n                </div>\n                <div className=\"FormField\">\n                    <Link to=\"/upload-info\" className=\"FormField__Button mr-20\" type=\"submit\" >Continue to next page</Link>\n                </div>\n            </form>\n        );\n    }\n}\nexport default SignUpForm;","import axios from 'axios';\n\nexport function signup(data) {\n    return axios.post(\"/register\", {\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        confirm: data.confirm\n    })\n        .then(response => {\n            localStorage.setItem('signup-token',JSON.stringify(response.data.token));\n            return response.data\n        })\n        .then(error => {\n            console.log(error);\n        })\n}\n\nexport function login(data) {\n    return axios.post(\"/sign-in\", {\n        email: data.email,\n        password: data.password\n    })\n        .then(response => {\n            localStorage.setItem('signin-token',JSON.stringify(response.data.token));\n            return response.data\n        })\n        .then(error => {\n            console.log(error);\n        })\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\nimport { login } from './Repository'\n\nclass SignInForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\"            \n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(e)\n    {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n\n        this.setState({\n            [name] : value\n        })\n\n    }\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        console.log(\"The form was submitted with the following data: \");\n        console.log(this.state);\n        login(this.state)\n        .catch(err => alert(err));\n    }\n\n    render() {\n        return (\n            <form className=\"FormField\" onSubmit={this.handleSubmit}>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"email\">Email Address</label>\n                    <input className=\"FormField__Input\" type=\"email\" id=\"email\" placeholder=\"Enter your email address\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                    <input className=\"FormField__Input\" type=\"password\" id=\"password\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <Link exact to=\"/upload-info\" className=\"FormField__Button mr-20\" type=\"submit\" >Sign In</Link>\n                    <Link exact to=\"/\" className=\"FormField__Link\">Create new account?</Link>\n                </div>\n            </form>\n        );\n    }\n}\nexport default SignInForm;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nclass Info extends Component {\n    \n    constructor() {\n        super();\n\n        this.fileInput = React.createRef();\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault(); \n        \n        const imgNidFront = this.fileInput.current.files[0];\n        const formData = new FormData();\n        formData.append('file',imgNidFront)\n        axios.post('http://35.240.221.96:6000/parse_nid', imgNidFront,  {\n            headers: { 'content-Type': 'multipart/form-data'}})\n          .then(response => {\n            localStorage.setItem('user',JSON.stringify(response.data));\n            \n            console.log(response.data);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    \n    }\n\n    render() {\n        return (\n            <form className=\"FormField\" >\n                <div className=\"FormField\">\n                    <label className=\"FormField__Info\" htmlFor=\"nidFront\">Upload Nid Front Side</label>\n                    <input type=\"file\" accept=\"image/*\" multiple = \"false\" ref={this.fileInput}/>\n                    <button type=\"submit\" onClick={this.handleSubmit}>Upload</button>\n                    \n                </div>\n                \n                <div className=\"FormField\">\n                    <label className=\"FormField__Info\" htmlFor=\"nidBack\">Upload Nid Back Side</label>\n                    <input type=\"file\" accept=\"image/*\" multiple = \"false\" ref={this.fileInput}/>\n                    <button type=\"submit\" onClick={this.handleSubmit}>Upload</button>\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Info\" htmlFor=\"facePic\">Upload your picture</label>\n                    <button className=\"FormField__Button mr-20\" type=\"submit\" >Open camera</button>\n                </div>\n                <div className=\"FormField\">\n                <Link to=\"/parsed-info\" className=\"FormField__Button mr-20\" type=\"submit\" >Show parsed data</Link>\n                </div>\n            </form>\n        );\n    }\n}\nexport default Info;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\n\nclass ParsedInfoForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            fName: \"\",\n            mName: \"\",\n            sName:\"\",\n            gender:\"\",\n            relation: \"\",\n            nominee:\"\",\n            pNo:\"\",\n            prof:\"\",\n            presentAddr:\"\",\n            permAddr:\"\"\n\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(e) {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"The form was submitted with the following data: \");\n        console.log(this.state);\n    }\n\n    // React Life Cycle\n    componentDidMount() {\n        this.userData = JSON.parse(localStorage.getItem('user'));\n\n        if (localStorage.getItem('user')) {\n            this.setState({\n                name: this.userData.name,\n                fName: this.userData.fathers_name,\n                mName: this.userData.mothers_name\n            })\n        } else {\n            this.setState({\n                name: '',\n                fName: '',\n                mName: ''\n            })\n        }\n    }\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem('user', JSON.stringify(nextState));\n    }\n    render() {\n        return (\n            <form className=\"FormField\" onSubmit={this.handleSubmit}>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"name\">Applicant's Name</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"name\" placeholder=\"\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"mName\">Mother's Name</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"mName\" placeholder=\"\" name=\"mName\" value={this.state.mName} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"fName\">Father's Name</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"fName\" placeholder=\"\" name=\"fName\" value={this.state.fName} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"sName\">Spouse Name</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"sName\" placeholder=\"\" name=\"sName\" value={this.state.sName} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"gender\">Gender(M/F/T)</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"gender\" placeholder=\"Enter your gender\" name=\"gender\" value={this.state.gender} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"prof\">Profesion</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"prof\" placeholder=\"Enter your profession\" name=\"prof\" value={this.state.prof} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"pNo\">Phone Number</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"pNo\" placeholder=\"Enter your phone no.\" name=\"pNo\" value={this.state.pNo} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"presentAddr\">Present Address</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"presentAddr\" placeholder=\"Confirm your present Address\" name=\"presentAddr\" value={this.state.presentAddr} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"permAddr\">Permanent Address</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"permAddr\" placeholder=\"Confirm your permanent address\" name=\"permAddr\" value={this.state.permAddr} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"nominee\">Nominee</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"nominee\" placeholder=\"Enter nominee name\" name=\"nominee\" value={this.state.nominee} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"relation\">Relation</label>\n                    <input className=\"FormField__Input\" type=\"text\" id=\"relation\" placeholder=\"Relation with nominee\" name=\"relation\" value={this.state.relation} onChange={this.handleChange} />\n                </div>\n                <div className=\"FormField\">\n                    <label className=\"FormField__Label\" htmlFor=\"picture\">Picture</label>\n                    \n                </div>\n                <div className=\"FormField\">\n                    {/* <button to=\"/further-info\" className=\"FormField__Button mr-20\" type=\"submit\" >Next page</button> */}\n                  \n                </div>\n                \n            </form>\n        );\n    }\n}\nexport default ParsedInfoForm;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport SignUpForm from './components/SignUpForm';\nimport SignInForm from './components/SignInForm';\nimport Info from './components/Info';\nimport ParsedInfoForm from './components/Parsed_info';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"App__Aside\">\n          <div className=\"Text__Set\">\n            <h1>EKYC DEMO</h1>\n            <h2>Electronic Know Your Customer</h2>\n            <h2>\"We promise to protect your digital financial processes\"</h2>\n          </div>\n        </div>\n        <div className=\"App__Form\">\n          <Route exact path=\"/\">\n          <div className=\"PageSwitcher\">\n                <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n            </div>\n\n            <div className=\"FormTitle\">\n                <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n              <SignUpForm />\n            </div>\n          </Route>\n          <Route exact path=\"/sign-in\">\n          <div className=\"PageSwitcher\">\n                <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n            </div>\n\n            <div className=\"FormTitle\">\n                <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n            </div>\n            <div className=\"FormCenter\">\n              <SignInForm />\n            </div>\n          </Route>\n          <Route exact path=\"/upload-info\">\n            <div className=\"FormCenter\">\n              <Info />\n            </div>\n          </Route>\n          <Route exact path=\"/parsed-info\">\n            <div className=\"FormCenter\">\n              <ParsedInfoForm />\n            </div>\n          </Route>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst element = (\n  <div>\n    <App/>\n  </div>\n);\n\nReactDOM.render(element, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}